{"version":3,"sources":["modules/select.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","bodyEl","isNative","isTouch","SelectFactory","$select","$tooltip","element","options","scope","$activeIndex","config","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","index","$$postDigest","select","evt","$isActive","$isVisible","i","$selectNone","$matches","length","$selectAllAtOnce","$selectAll","newActiveIndex","push","controller","$setViewValue","map","$selectNoneAtOnce","matches","$updateActiveIndex","b","a","value","$apply","hide","prefixEvent","$modelValue","$emit","$getIndex","minLength","$viewValue","l","indexOf","preventDefault","stopPropagation","targetEl","$onMouseDown","keyCode","$onKeyDown","test","$digest","isUndefined","$selectScrollFix","$isIE","stopImmediatePropagation","target","focus","ua","_show","show","activeElement","tagName","e","$element","addClass","$timeout","_hide","on","off","directive","$scope","$window","document","link","require","restrict","forEach","attr","falseValueRegExp","isDefined","dataMultiple","key","nodeName","toLowerCase","inputEl","after","css","addEventListener","watchedOptions","parsedOptions","valuesFn","update","values","ngModel","$match","newValue","oldValue","$render","selected","isArray","join","label","$isEmpty","$on","destroy"],"mappings":"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","file":"modules/select.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        }\n        else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function(index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectAllAtOnce = function () {\n          if(!options.multiple)\n            scope.$selectAll();\n          else {\n            var newActiveIndex = [];\n\n            for (var i = 0; i < scope.$matches.length; i++)\n              newActiveIndex.push(i);\n\n            scope.$activeIndex = newActiveIndex;\n\n            controller.$setViewValue(scope.$activeIndex.map(function(index) {\n              if (angular.isUndefined(scope.$matches[index])) {\n                return null;\n              }\n\n              return scope.$matches[index].value;\n            }));\n          }\n        };\n\n        scope.$selectNoneAtOnce = function () {\n          if (!options.multiple)\n            scope.$selectNone();\n          else {\n            scope.$activeIndex = [];\n\n            controller.$setViewValue([]);\n          }\n        };\n\n        // Public methods\n\n        $select.update = function(matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function(index) {\n          if(options.multiple) {\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\n            if(options.sort) scope.$activeIndex.sort(function(a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function(index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function() {\n            $select.activate(index);\n            if(options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function() {\n          if(controller.$modelValue && scope.$matches.length) {\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            }\n          } else if(scope.$activeIndex >= scope.$matches.length) {\n            scope.$activeIndex = options.multiple ? [] : 0;\n          } else if(!controller.$modelValue && !options.multiple) {\n            scope.$activeIndex = -1;\n          }\n        };\n\n        $select.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function(index) {\n          if(options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          } else {\n            return scope.$activeIndex === index;\n          }\n        };\n\n        $select.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $select.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function(evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if(evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function() {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function(e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function() {\n          _show();\n          if(options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function() {\n          if(!options.multiple && !controller.$modelValue) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if(angular.isDefined(dataMultiple)) {\n          if(falseValueRegExp.test(dataMultiple))\n            options.multiple = false;\n          else\n            options.multiple = dataMultiple;\n        }\n\n        // Add support for select markup\n        if(element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watchCollection(watchedOptions, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            select.update(values);\n            controller.$render();\n          });\n        });\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected, index;\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function(value) {\n              index = select.$getIndex(value);\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\n        };\n\n        if(options.multiple){\n          controller.$isEmpty = function(value){\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}